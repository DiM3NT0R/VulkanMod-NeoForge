plugins {
    id 'java'
    id 'idea'
    id 'eclipse'
    id 'maven-publish'
    // NeoGradle userdev plugin (ветка для 1.21.x)
    id 'net.neoforged.gradle.userdev' version '7.0.190'
}

group = 'net.vulkanmod'
version = '0.0.1-neoforge-1.21.1'
archivesBaseName = 'VulkanMod-NeoForge'

ext {
    neoforgeVersion = '21.1.176'   // целевая версия NeoForge
    lwjglVersion    = '3.3.3'      // единая версия LWJGL
    gsonVersion     = '2.11.0'
    fastutilVersion = '8.5.12'
    jbAnnoVersion   = '24.1.0'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
    withSourcesJar()
}

repositories {
    maven {
        name = 'NeoForged'
        url = uri('https://maven.neoforged.net/releases')
    }
    mavenCentral()
}

dependencies {
    // NeoForge
    implementation "net.neoforged:neoforge:${neoforgeVersion}"

    // LWJGL: только для компиляции, чтобы не паковать в мод
    compileOnly "org.lwjgl:lwjgl:${lwjglVersion}"
    compileOnly "org.lwjgl:lwjgl-vulkan:${lwjglVersion}"
    compileOnly "org.lwjgl:lwjgl-vma:${lwjglVersion}"
    compileOnly "org.lwjgl:lwjgl-glfw:${lwjglVersion}"

    // Утилиты — тоже достаточно compileOnly (они уже есть у MC/NeoForge)
    compileOnly "com.google.code.gson:gson:${gsonVersion}"
    compileOnly "it.unimi.dsi:fastutil:${fastutilVersion}"
    compileOnly "org.jetbrains:annotations:${jbAnnoVersion}"

    // LWJGL Shaderc (для SPIR-V компиляции)
    implementation "org.lwjgl:lwjgl-shaderc:${lwjglVersion}"
    runtimeOnly   "org.lwjgl:lwjgl-shaderc:${lwjglVersion}:natives-windows"


}

sourceSets {
    main {
        java {
            exclude 'net/vulkanmod/Initializer.java'                          // был Fabric ClientModInitializer
            exclude 'net/vulkanmod/render/VBO.java'                           // использует @Environment из Fabric
            exclude 'net/vulkanmod/render/chunk/build/RenderRegion.java'      // RenderAttachedBlockView (Fabric)
            exclude 'net/vulkanmod/render/chunk/build/frapi/**'               // весь FRAPI-слой
            exclude 'net/vulkanmod/mixin/render/frapi/**'                     // frapi-миксины
            exclude 'net/vulkanmod/render/chunk/build/renderer/FluidRenderer.java' // fabric FluidRendering
            exclude 'net/vulkanmod/render/chunk/build/renderer/BlockRenderer.java' // fabric BlendMode/RenderMaterial/TriState
            exclude 'net/vulkanmod/render/model/CubeModel.java'               // упирается в непубличный ModelPart.Polygon
            exclude 'net/vulkanmod/mixin/texture/update/MSpriteContents.java' // упирается в непубличный AnimatedTexture (раньше AW)
        }
        resources {
            // На всякий: никаких fabric.mod.json, accesswidener и т.п.
            exclude 'fabric.mod.json'
            exclude 'vulkanmod.accesswidener'
        }
    }
}



// Конфигурации запуска. NeoGradle создаёт дефолты, но фиксируем для удобства.
runs {
    client {
        workingDirectory = file('run/client')
        // vmArgs += ['-Xmx4G']
        // programArgs += ['--username', 'Dev']
    }
    server {
        workingDirectory = file('run/server')
    }
    data {
        workingDirectory = file('run/data')
    }
}

jar {
    manifest {
        attributes(
                'Specification-Title'   : 'VulkanMod',
                'Specification-Vendor'  : 'VulkanMod-Port',
                'Specification-Version' : '1',
                'Implementation-Title'  : project.name,
                'Implementation-Version': project.version,
                'Implementation-Vendor' : 'VulkanMod-Port'
        )
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact tasks.sourcesJar
            groupId    = project.group
            artifactId = archivesBaseName
            version    = project.version
        }
    }
    repositories {
        maven {
            name = 'localBuild'
            url = uri("${buildDir}/m2")
        }
    }
}
